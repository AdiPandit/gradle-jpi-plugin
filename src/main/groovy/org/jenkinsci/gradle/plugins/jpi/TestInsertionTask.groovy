package org.jenkinsci.gradle.plugins.jpi

import org.gradle.api.DefaultTask
import org.gradle.api.plugins.JavaPluginConvention
import org.gradle.api.tasks.SourceSet
import org.gradle.api.tasks.TaskAction

import static org.gradle.api.tasks.SourceSet.MAIN_SOURCE_SET_NAME
import static org.gradle.api.tasks.SourceSet.TEST_SOURCE_SET_NAME

class TestInsertionTask extends DefaultTask {
    public static final String TASK_NAME = 'insertTest'

    @TaskAction
    void generateInjectedTest() {
        JpiExtension jpiExtension = project.extensions.getByType(JpiExtension)
        JavaPluginConvention javaConvention = project.convention.getPlugin(JavaPluginConvention)
        SourceSet mainSourceSet = javaConvention.sourceSets.getByName(MAIN_SOURCE_SET_NAME)
        SourceSet testSourceSet = javaConvention.sourceSets.getByName(TEST_SOURCE_SET_NAME)

        if (jpiExtension.disabledTestInjection) {
            return
        }

        File root = new File(project.buildDir, 'inject-tests')
        root.mkdirs()
        testSourceSet.java.srcDirs += root

        File javaFile = new File(root, "${jpiExtension.injectedTestName}.java")
        javaFile.text = """import java.util.*;

/**
 * Entry point to auto-generated tests (generated by gradle-jpi-plugin).
 */
public class ${jpiExtension.injectedTestName} extends junit.framework.TestCase {
    public static junit.framework.Test suite() throws Exception {
        Map parameters = new HashMap();
        parameters.put("basedir", ${quote(project.projectDir.absolutePath)});
        parameters.put("artifactId", ${quote(jpiExtension.shortName)});
        parameters.put("outputDirectory", ${quote(mainSourceSet.output.resourcesDir.absolutePath)});
        parameters.put("requirePI", ${quote(String.valueOf(jpiExtension.requirePI))});
        return new org.jvnet.hudson.test.PluginAutomaticTestBuilder().build(parameters);
    }
}
"""
    }

    private static String quote(String s) {
        "\"${s.replace('\\', '\\\\')}\""
    }
}
